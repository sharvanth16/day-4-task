Print odd numbers in an array:

// Anonymous function
const printOddNumbers = function(arr) {
  arr.forEach(function(num) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
};

// IIFE
(function(arr) {
  arr.forEach(function(num) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
})([1, 2, 3, 4, 5]);

Convert all the strings to title caps in a string array:

// Anonymous function
const sumArray = function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log(sum);
};

// IIFE
(function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log(sum);
})([1, 2, 3, 4, 5]);

Sum of all numbers in an array:

// Anonymous function
const sumArray = function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log(sum);
};

// IIFE
(function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log(sum);
})([1, 2, 3, 4, 5]);


Return all the prime numbers in an array:

// Anonymous function
const getPrimeNumbers = function(arr) {
  const primesArray = arr.filter(function(num) {
    if (num < 2) {
      return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return true;
  });
  console.log(primesArray);
};

// IIFE
(function(arr) {
  const primesArray = arr.filter(function(num) {
    if (num < 2) {
      return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return true;
  });
  console.log(primesArray);
})([2, 3, 4, 5, 6, 7, 8, 9, 10]);

Return all the palindromes in an array:

// Anonymous function
const getPalindromes = function(arr) {
  const palindromesArray = arr.filter(function(str) {
    const reversedStr = str.split("").reverse().join("");
    return str === reversedStr;
  });
  console.log(palindromesArray);
};

// IIFE
(function(arr) {
  const palindromesArray = arr.filter(function(str) {
    const reversedStr = str.split("").reverse().join("");
    return str === reversedStr;
  });
  console.log(palindromesArray);
})(["level", "hello", "madam", "world"]);


Return median of two sorted arrays of the same size:

// Anonymous function
const getMedian = function(arr1, arr2) {
  const mergedArray = arr1.concat(arr2);
  mergedArray.sort(function(a, b) {
    return a - b;
  });
  const midIndex = Math.floor(mergedArray.length / 2);
  const median = mergedArray.length % 2 === 0 ?
    (mergedArray[midIndex - 1] + mergedArray[midIndex]) / 2 :
    mergedArray[midIndex];
  console.log(median);
};

// IIFE
(function(arr1, arr2) {
  const mergedArray = arr1.concat(arr2);
  mergedArray.sort(function(a, b) {
    return a - b;
  });
  const midIndex = Math.floor(mergedArray.length / 2);
  const median = mergedArray.length % 2 === 0 ?
    (mergedArray[midIndex - 1] + mergedArray[midIndex]) / 2 :
    mergedArray[midIndex];
  console.log(median);
})([1, 3, 5], [2, 4, 6]);


Remove duplicates from an array:

// Anonymous function
const removeDuplicates = function(arr) {
  const uniqueArray = arr.filter(function(value, index, self) {
    return self.indexOf(value) === index;
  });
  console.log(uniqueArray);
};

// IIFE
(function(arr) {
  const uniqueArray = arr.filter(function(value, index, self) {
    return self.indexOf(value) === index;
  });
  console.log(uniqueArray);
})([1, 2, 3, 2, 4, 1, 5, 3]);


Rotate an array by k times:

// Anonymous function
const rotateArray = function(arr, k) {
  const rotations = k % arr.length;
  const rotatedArray = arr.slice(rotations).concat(arr.slice(0, rotations));
  console.log(rotatedArray);
};

// IIFE
(function(arr, k) {
  const rotations = k % arr.length;
  const rotatedArray = arr.slice(rotations).concat(arr.slice(0, rotations));
  console.log(rotatedArray);
})([1, 2, 3, 4, 5], 2);


